@using NProject.Web.Helpers
@model NProject.Web.ViewModels.Task.Form
<style>
    span.field-validation-error
    {
        display: block;
        color: #B94A48;
    }
</style>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
        
    <fieldset>
        <legend>
            @if (Model.IsCreation)
            { <text>Create new task</text> }
            else
            { <text>Editing</text>}
        </legend>
        <div style="padding-top: 5px;border-bottom: 1px solid #EEE;">
            <input type="submit" class="btn btn-small btn-primary" value="Save" />
            @if (!Model.IsCreation)
            {
                <div class="pull-right">
                    <a class="btn btn-danger btn-small" href="#delete_task_modal" data-toggle="modal">
                        <i class="icon-trash"></i>Delete </a>
                </div>
            }
        </div>
        <div style="float: left">
            <div class="control-group">
                @Html.LabelFor(model => model.Task.Name)
                <div class="controls">
                    @Html.TextBoxFor(model => model.Task.Name, new { @class = "span9" })
                    @Html.ValidationMessageFor(model => model.Task.Name)
                </div>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Task.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Task.Description, new { @class = "span9", rows = 6 })
                @Html.ValidationMessageFor(model => model.Task.Description)
            </div>
            @*            <div class="editor-label">
                @Html.LabelFor(model => model.Task.BeginWorkDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Task.BeginWorkDate)
                @Html.ValidationMessageFor(model => model.Task.BeginWorkDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Task.EstimatedHours)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Task.EstimatedHours)
                @Html.ValidationMessageFor(model => model.Task.EstimatedHours)
            </div>*@
            <p>
            </p>
        </div>
        <div style="margin-left: 20px; float: left">
            <div class="editor-label">
                @Html.LabelFor(model => model.Task.Responsible)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Task.ResponsibleId, Model.Users)
                @Html.ValidationMessageFor(model => model.Task.Responsible)
            </div>
            <label style="text-align: center">
                <a onclick="$('#financeBlock').toggle()">Finance</a></label>
            <div id="financeBlock" @if (!Model.Task.CostValue.HasValue)
                                   {
                                  <text>class="hide"</text>
                                   }>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Task.CostType)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.Task.CostType, new { id = "selectCostType", onchange = "toggleValueBox()" })
                    @Html.ValidationMessageFor(model => model.Task.CostType)
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Task.CostValue)
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Task.CostValue, new { id = "tbValue" })
                        @Html.ValidationMessageFor(model => model.Task.CostValue)
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.Task.ProjectId)
        @Html.HiddenFor(model => model.Task.Id)
    </fieldset>

    <div style="clear: both">
    </div>
}

<script language="javascript" type="text/javascript">
    var freeCostType = '@NProject.Models.Domain.CostType.Free';

    function toggleValueBox() {
        if ($('#selectCostType').val() != freeCostType)
            $('#tbValue').removeAttr('disabled');
        else
            $('#tbValue').val('').attr('disabled', 'disabled');
    }
    toggleValueBox();
</script>
