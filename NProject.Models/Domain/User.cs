//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using NProject.Models.Infrastructure;

namespace NProject.Models.Domain
{
    public enum UserAccountType
    {
        MeetingParticipant = 1,
        FullUser = 2,
        Administrator = 3,
    }

    public partial class User : IEntityWithIntegerKey
    {
        public User()
        {
            AccountType = UserAccountType.FullUser;
            this.RegistrationDate = DateTime.UtcNow;
            this.HoursOffsetFromUtc = 0;
            this.Language = "en-us";

            this.OwnedWorkspaces = new HashSet<Workspace>();
            this.ManagedProjects = new HashSet<Project>();
            this.Tasks = new HashSet<Task>();

            this.Meetings = new HashSet<Meeting>();
            this.ReceivedInvitations = new HashSet<Invitation>();
            this.Comments = new HashSet<TaskComment>();
            this.MeetingComments = new HashSet<MeetingComment>();
            this.TeamMates = new HashSet<TeamMate>();
        }

        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }

        [StringLength(100)]
        public string Email { get; set; }

        public byte HoursOffsetFromUtc { get; set; }
        public System.DateTime RegistrationDate { get; set; }
        public string PasswordHash { get; set; }
        public string Language { get; set; }

        public virtual ICollection<Workspace> OwnedWorkspaces { get; set; }
        public virtual ICollection<Project> ManagedProjects { get; set; }
        public virtual ICollection<Task> Tasks { get; set; }

        public virtual ICollection<Meeting> OrganizedMeetings { get; set; }
        public virtual ICollection<Meeting> Meetings { get; set; }

        public virtual ICollection<Invitation> ReceivedInvitations { get; set; }
        public virtual ICollection<TaskComment> Comments { get; set; }
        public virtual ICollection<MeetingComment> MeetingComments { get; set; }
        public virtual ICollection<TeamMate> TeamMates { get; set; }

        [Column("AccountType")]
        [Obsolete("Is used only by EF. Use AccountType instead of")]
        public int AccountTypeValue { get; set; }

        [NotMapped]
        public UserAccountType AccountType
        {
#pragma warning disable 612,618
            get { return (UserAccountType) AccountTypeValue; }
            set { AccountTypeValue = (int) value; }
#pragma warning restore 612,618
        }

        [NotMapped]
        public string Name
        {
            get { return !string.IsNullOrEmpty(FirstName) ? string.Format("{0} {1}", FirstName, LastName) : Email; }
        }
    }
}